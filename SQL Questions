## SQL Questions

👨‍💻 SQL Interview Questions And Answers for Freshers (SQL Basic Questions):
01:00 - Q.1 Difference Between DBMS and RDBMS
02:19 - Q.2 Primary Key and Foreign Key
03:33 - Q.3 Constraints and Their Types
05:28 - Q.4 DDL and DML Commands
07:18 - Q.5 Difference Between Delete, Drop, and Truncate

👨‍💻 Intermediate Interview Questions SQL (SQL Questions to Clear Interviews):
08:48 - Q.6 Group By Vs Order By Clause
10:46 - Q.7 Difference Between Where And Having Clauses
12:26 - Q.8 Aggregate Function with Example
13:43 - Q.9 Indexing and Clustered Indexing
14:53 - Q.10 Normalisation and Different Types of Normal Forms

👨‍💻 SQL Interview Questions And Answers for Experienced (Top SQL Questions):
17:14 - Q.11 Union and Union All Operator in SQL
18:42 - Q.12 Query to Find Second Highest Salary in a Table - SELECT EMP_ID,NAME FROM (Select MAX(Salary) From Table where salary < (Select max(Salary) from Table ))
20:09 - Q.13 Views in SQL
21:22 - Q.14 How Can You Convert Text into Date Format? select str_to_date(Date,'%d-%m-%Y') from table
21:53 - Q.15 What are Triggers in SQL  - Triggers are like reflex action which allow you to set up an automatic action.


CREATE TRIGGER log_employee_insert
AFTER INSERT ON employees
FOR EACH ROW
BEGIN
    INSERT INTO employee_log (employee_id, action, action_time)
    VALUES (NEW.employee_id, 'INSERT', NOW());
END;


Find the second highest salary from an Employee table—without using LIMIT. 

🔹 Identify duplicate records in an Orders table.

SELECT OrderID, COUNT(*)
FROM Orders
GROUP BY OrderID
HAVING COUNT(*) > 1;


 🔹 Find employees whose salary is greater than their manager’s salary. 


SELECT e.EmployeeID, e.EmployeeName, e.Salary, m.ManagerID, m.ManagerName, m.Salary AS ManagerSalary
FROM Employees e
JOIN Employees m ON e.ManagerID = m.EmployeeID
WHERE e.Salary > m.Salary;


🔹 Detect consecutive repeating numbers in a column. 


SELECT Number, COUNT(*)
FROM (
    SELECT Number, 
           LAG(Number) OVER (ORDER BY ID) AS PrevNumber
    FROM Numbers
) AS SubQuery
WHERE Number = PrevNumber
GROUP BY Number;


🔹 Use self-joins to list employees with the same manager. 

SELECT Number, COUNT(*)
FROM (
    SELECT Number, 
           LAG(Number) OVER (ORDER BY ID) AS PrevNumber
    FROM Numbers
) AS SubQuery
WHERE Number = PrevNumber
GROUP BY Number;


🔹 Calculate a running total (cumulative sum) of sales per month. 

SELECT Month, Sales,
       SUM(Sales) OVER (ORDER BY Month) AS RunningTotal
FROM MonthlySales;


🔹 Explain RANK(), DENSE_RANK(), and ROW_NUMBER(). 
RANK(): Assigns a unique rank to each row within a partition of a result set, with gaps in the ranking sequence when there are ties.
DENSE_RANK(): Similar to RANK(), but without gaps in the ranking sequence when there are ties.
ROW_NUMBER(): Assigns a unique sequential integer to rows within a partition of a result set, without considering ties.

🔹 Find users who have taken at least one ride every day in the last 10 days.
SELECT UserID
FROM Rides
WHERE RideDate >= DATEADD(day, -10, GETDATE())
GROUP BY UserID
HAVING COUNT(DISTINCT RideDate) = 10;


 🔹 Calculate the percentage of successful payments per user.


SELECT UserID,
       (SUM(CASE WHEN PaymentStatus = 'Successful' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS SuccessRate
FROM Payments
GROUP BY UserID;


 🔹 Optimize slow queries for better performance.

Indexing: Ensure appropriate indexes are in place.
Query Optimization: Rewrite queries for efficiency.
Analyze Execution Plans: Use tools to analyze and optimize execution plans.
Partitioning: Split large tables into smaller, more manageable pieces.
Caching: Use caching strategies to reduce database load.

What are scalar and aggregate function in sql?

What does coalesce function do in sql?

